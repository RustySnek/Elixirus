<div class="flex flex-col gap-6 w-full px-4 lg:px-6">
  <!-- Header -->
  <div class="flex items-center gap-3 mb-2">
    <Heroicons.document_text class="w-8 h-8 text-purple-400" />
    <h1 class="text-3xl font-bold text-purple-300">Homework</h1>
  </div>

  <!-- Loading State -->
  <div :if={@homework == [] && :load_homework in @loadings} class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
    <div :for={_ <- 0..5} class="glass-card backdrop-blur-xl rounded-lg p-6 h-48 animate-pulse">
    </div>
  </div>

  <!-- Empty State -->
  <div
    :if={@homework == [] && !(:load_homework in @loadings)}
    class="flex flex-col justify-center items-center text-center py-16"
  >
    <Heroicons.document_text class="w-20 h-20 text-purple-400/50 mb-4" />
    <h2 class="font-bold text-purple-300/50 text-2xl">No homework assignments</h2>
    <p class="text-purple-400/50 mt-2">You're all caught up!</p>
  </div>

  <!-- Homework Grid -->
  <div :if={@homework != []} class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
    <div
      :for={hw <- @homework}
      class="glass-card backdrop-blur-xl rounded-lg p-5 hover:border-purple-400/60 transition-colors flex flex-col"
    >
      <!-- Header Row -->
      <div class="flex items-start justify-between mb-4">
        <div class="flex-1 min-w-0">
          <div class="flex items-center gap-2 mb-2">
            <Heroicons.academic_cap class="w-5 h-5 text-purple-400 flex-shrink-0" />
            <h2 class="text-lg font-bold text-purple-200 truncate"><%= hw.subject %></h2>
          </div>
          <div class="flex items-center gap-2 text-sm text-purple-400/70">
            <Heroicons.document_text class="w-4 h-4" />
            <span class="truncate"><%= hw.category %></span>
            <span class="mx-1">â€¢</span>
            <span>Lesson <%= hw.lesson %></span>
          </div>
        </div>
      </div>

      <!-- Due Date Badge -->
      <div class="mb-4">
        <div class={[
          "inline-flex items-center gap-2 px-3 py-1.5 rounded-lg text-sm font-semibold",
          case hw.completion_date |> due_to_diff_in_days() do
            days when days < 0 -> "bg-red-500/20 border border-red-500/40 text-red-300"
            days when days > 0 -> "bg-green-500/20 border border-green-500/40 text-green-300"
            _ -> "bg-amber-500/20 border border-amber-500/40 text-amber-300"
          end
        ]}>
          <Heroicons.calendar class="w-4 h-4" />
          <span><%= hw.completion_date |> due_to_diff_in_days() |> stringify_days() %></span>
        </div>
      </div>

      <!-- Teacher -->
      <div class="flex items-center gap-2 mb-4 text-sm text-purple-300/80">
        <Heroicons.user class="w-4 h-4 text-purple-400/60" />
        <span class="truncate"><%= hw.teacher %></span>
      </div>

      <!-- Task Date -->
      <div class="flex items-center gap-2 text-xs text-purple-400/60 mb-4">
        <Heroicons.calendar_days class="w-4 h-4" />
        <span>Added: <%= hw.task_date %></span>
      </div>

      <!-- Actions -->
      <div class="flex items-center justify-end gap-3 mt-auto pt-4 border-t border-purple-500/20">
        <button
          class="p-2 rounded-lg glass-card backdrop-blur-xl bg-purple-500/10 hover:bg-purple-500/20 border border-purple-500/20 hover:border-purple-400/40 transition-all"
          title="Mark as complete"
        >
          <Heroicons.check_circle class="w-5 h-5 text-purple-400" />
        </button>
        <.link
          patch={~p"/student/homework?href=#{hw.href}"}
          class="p-2 rounded-lg glass-card backdrop-blur-xl bg-purple-500/10 hover:bg-purple-500/20 border border-purple-500/20 hover:border-purple-400/40 transition-all"
          title="View details"
        >
          <Heroicons.eye class="w-5 h-5 text-purple-400" />
        </.link>
      </div>
    </div>
  </div>

  <!-- Homework Details Modal -->
  <div :if={@details} class="fixed inset-0 z-[999999] flex items-center justify-center p-4" style="position: fixed !important; top: 0 !important; left: 0 !important; right: 0 !important; bottom: 0 !important; z-index: 999999 !important; isolation: isolate !important;">
    <!-- Backdrop -->
    <div
      phx-click="wipe_details"
      class="fixed inset-0 bg-black/60 backdrop-blur-sm"
      style="position: fixed !important; top: 0 !important; left: 0 !important; right: 0 !important; bottom: 0 !important; z-index: 999999 !important;"
    >
    </div>

    <!-- Modal Content -->
    <div
      class="glass-card backdrop-blur-xl rounded-lg p-6 max-w-2xl w-full max-h-[85vh] overflow-y-auto relative z-[1000000]"
      style="z-index: 1000000 !important; position: relative !important;"
    >
      <!-- Modal Header -->
      <div class="flex items-start justify-between mb-6 pb-4 border-b border-purple-500/20">
        <div class="flex items-center gap-3 flex-1 min-w-0">
          <Heroicons.document_text class="w-8 h-8 text-purple-400 flex-shrink-0" />
          <div class="flex-1 min-w-0">
            <h2 class="text-2xl font-bold text-purple-200 mb-1">Homework Details</h2>
            <p class="text-sm text-purple-400/70">Complete information about this assignment</p>
          </div>
        </div>
        <button
          phx-click="wipe_details"
          class="p-2 rounded-lg glass-card backdrop-blur-xl bg-purple-500/10 hover:bg-purple-500/20 border border-purple-500/20 hover:border-purple-400/40 transition-all flex-shrink-0"
        >
          <Heroicons.x_mark class="w-5 h-5 text-purple-400" />
        </button>
      </div>

      <!-- Details Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div
          :for={{key, value} <- @details |> Map.to_list()}
          :if={value != nil && value != ""}
          class="flex flex-col gap-1 p-3 rounded-lg bg-purple-500/10 border border-purple-500/20"
        >
          <div class="text-xs uppercase text-purple-400/70 mb-1 font-medium">
            <%= String.replace(to_string(key), "_", " ") |> String.split(" ") |> Enum.map(&String.capitalize/1) |> Enum.join(" ") %>
          </div>
          <div class="text-sm text-purple-200 break-words">
            <%= if is_binary(value), do: value, else: inspect(value) %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
