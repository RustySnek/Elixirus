<.flash_group flash={@flash} />
<div class="glass-header sticky top-0 z-50 border-b border-purple-500/30 shadow-lg">
  <div class="modern-header">
    <div class="header-content">
      <div class="header-logo-section">
        <.link navigate={~p"/student"} class="flex items-center group">
          <div class="flex flex-row gap-x-3 items-center">
            <Heroicons.beaker class="h-10 w-10 xs:h-8 xs:w-8 text-purple-400 drop-shadow-[0_0_12px_rgba(168,85,247,0.8)] group-hover:drop-shadow-[0_0_20px_rgba(232,121,249,0.9)] transition-all duration-300" />
            <h1 class="font-quicksand text-5xl xs:text-4xl font-extrabold neon-text">
              Elixir<span class="text-purple-300">us</span>
            </h1>
          </div>
        </.link>
      </div>
      
      <div class="header-actions">
        <div class="flex items-center gap-2">
          <div
            :for={{service, status} <- ElixirusWeb.Components.NavHeader.status()}
            class={"status-pill #{status == :up && "status-up" || "status-down"}"}
            title={"#{service}: #{status}"}
          >
            <Heroicons.check_circle :if={service == :librus && status == :up} class="w-4 h-4" />
            <Heroicons.x_circle :if={service == :librus && status == :down} class="w-4 h-4" />
            <Heroicons.signal :if={service == :proxy && status == :up} class="w-4 h-4" />
            <Heroicons.signal_slash :if={service == :proxy && status == :down} class="w-4 h-4" />
            <span class="hidden sm:inline"><%= String.capitalize(to_string(service)) %></span>
          </div>
        </div>
        
        <.link navigate={~p"/student/refresh"} class="header-action-btn" title="Refresh">
          <Heroicons.arrow_path class="w-5 h-5" />
        </.link>
        
        <button id="logout-button" phx-hook="logout_button" class="header-action-btn logout" title="Logout">
          <Heroicons.arrow_right_on_rectangle class="w-5 h-5" />
        </button>
      </div>
    </div>
    
    <nav class="mt-4">
      <div class="tab-container" phx-hook="ActiveTab" id="tab-container">
        <.link
          :for={{title, href, _nested_links, _text_classes} <- links()}
          navigate={href}
          class="tab-item"
          data-href={to_string(href)}
        >
          <%= title %>
        </.link>
      </div>
    </nav>
  </div>
</div>
<.live_component module={ElixirusWeb.LoginModal} id="login-modal-component" />

<main class="pt-6 xs:pt-4 xs:px-2 px-6 pb-8">
  <%= @inner_content %>
</main>
